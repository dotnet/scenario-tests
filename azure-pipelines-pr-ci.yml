trigger:
  batch: true
  branches:
    include:
    - main
    - release/*
  paths:
    exclude:
    - README.md
    - docs/*

pr:
  branches:
    include:
    - main
    - release/*
  paths:
    exclude:
    - README.md
    - docs/*

variables:
- name: isSourceOnlyBuild
  value: false

- name: isSourceOnlyBuildLite
  value: false

- name: isScheduleTrigger
  value: ${{ eq(variables['Build.Reason'], 'Schedule') }}

- name: isPRTrigger
  value: ${{ eq(variables['Build.Reason'], 'PullRequest') }}

- name: skipComponentGovernanceDetection
  value: true

- name: Codeql.Enabled
  value: false

- template: /eng/common/templates/variables/pool-providers.yml@self

resources:
  repositories:
  - repository: VMR
    type: github
    name: dotnet/dotnet
    ref: refs/heads/main
    endpoint: dotnet

stages:
- stage: build
  displayName: Build
  jobs:
  - template: /eng/common/templates/jobs/jobs.yml
    parameters:
      artifacts:
        publish:
          artifacts: true
          logs: true
          manifests: true
      enableMicrobuild: true
      enablePublishTestResults: true
      enablePublishUsingPipelines: true
      enableTelemetry: true
      publishAssetsImmediately: true
      helixRepo: dotnet/scenario-tests
      jobs:
      - job: Windows
        pool:
          vmImage: 'windows-latest'
        strategy:
          matrix:
            Debug:
              _BuildConfig: Debug
              _BuildArgs: ''
            Release:
              _BuildConfig: Release
              _BuildArgs: ''
        steps:
        - checkout: self
          clean: true
        - script: eng\common\CIBuild.cmd -configuration $(_BuildConfig) -prepareMachine
          displayName: Build and Test

      - job: MacOS
        displayName: 'MacOS'
        pool:
          vmImage: 'macOS-latest'
        strategy:
          matrix:
            Debug:
              _BuildConfig: Debug
            Release:
              _BuildConfig: Release
        steps:
        - checkout: self
          clean: true
        - script: eng/common/cibuild.sh --configuration $(_BuildConfig) --prepareMachine
          displayName: Build and Test

      - job: Linux
        displayName: 'Linux'
        pool:
          vmImage: 'ubuntu-latest'
        strategy:
          matrix:
            Debug:
              _BuildConfig: Debug
            Release:
              _BuildConfig: Release
        steps:
        - checkout: self
          clean: true
        - script: eng/common/cibuild.sh --configuration $(_BuildConfig) --prepareMachine
          displayName: Build and Test

- template: /src/sdk/eng/pipelines/templates/stages/vmr-build.yml@VMR
  parameters:
    isBuiltFromVmr: true
    isSourceOnlyBuild: ${{ variables.isSourceOnlyBuild }}
    ${{ if or(eq(variables.isScheduleTrigger, 'true'), contains(variables['Build.DefinitionName'], '-full')) }}:
      scope: full
    ${{ elseif eq(variables.isSourceOnlyBuildLite, 'true') }}:
      scope: lite
    ${{ elseif and(eq(variables.isPRTrigger, 'true'), eq(variables.isSourceOnlyBuild, 'true')) }}:
      scope: ultralite
    ${{ elseif and(eq(variables.isPRTrigger, 'true'), ne(variables.isSourceOnlyBuild, 'true')) }}:
      scope: lite
    ${{ else }}:
      scope: full